438. Find All Anagrams in a String

class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        //related to 187. multiple pattern search in a string. solved by sliding window approach in a linear time. how to implement constant-time slice to fit into this linear time?
        //sliding window with vector instead of hashmap
        //T=O(n) n is the length of string s, S=O(1) 26 
        vector<int> result;
        vector<int> shash (26, 0);
        vector<int> phash (26, 0);
        int window = p.size();
        int len = s.size();
        if (window > len){
            return result;
        }

        for (auto ch:p){
            phash[ch - 'a']++;
        }
        //sliding window
        for (int i=0; i<len; i++){
            // add one letter from the right side of the window
            shash[s[i]-'a']++;
            // remove one letter from the left side of the window
            // i-window is the extra left letter, remove it.
            if (i >= window){
                shash[s[i-window] - 'a']--;
            }
            if(phash == shash){
                result.push_back(i-window+1);
            }
        }
        return result;
    }
};
