48. Rotate Image

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        //T=O(n) n:number of cells. S=O(1)
        // flip diagonally, then flip horizontally
        //思路：先斜着翻转 后左右对折；or先左右对折 后斜着翻转。
        //reverse[), reverse的T=O(n)。reverse的S=O(1)
        //swap的S=O(1)=T
        //左上到右下为轴 翻转
        for (int i=0; i<matrix.size(); i++){
            for (int j=i+1; j<matrix.size(); j++){ //j=i or j=i+1, only swap右上三角区域的数字。如果swap所有数字 就跟没swap一样。
                swap(matrix[i][j], matrix[j][i]);
            }
        } //再中间竖轴为轴 整行对折reverse
        for (int i=0; i<matrix.size(); i++){
            reverse(matrix[i].begin(), matrix[i].end());
        }

  /*      //这个方法没看懂。Rotate Groups of Four Cells, T=O(n) n: the number of cells. S=O(1)
        int n = matrix.size();
        for (int i=0; i<(n+1)/2; i++){
            for (int j=0; j<n/2; j++){
                int temp = matrix[n - 1 - j][i];
                matrix[n - 1 - j][i] = matrix[n - 1 - i][n - j - 1];
                matrix[n - 1 - i][n - j - 1] = matrix[j][n - 1 -i];
                matrix[j][n - 1 - i] = matrix[i][j];
                matrix[i][j] = temp;               

            }
        }
        */
    }
};
